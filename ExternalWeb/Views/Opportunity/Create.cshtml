@model ExternalWeb.ViewModels.OpportunityViewModel

@{
    ViewBag.Title = "Create an Opportunity";
}

<h2>@ViewBag.Title</h2>
<p>Use this form to create a volunteering opportunity for <b>@ViewBag.CompanyName</b></p>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Opportunity</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opportunity.OpportunityTitle)
            @Html.ValidationMessageFor(model => model.Opportunity.OpportunityTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityDescription)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Opportunity.OpportunityDescription)
            @Html.ValidationMessageFor(model => model.Opportunity.OpportunityDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityAdditionalInformation)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Opportunity.OpportunityAdditionalInformation)
            @Html.ValidationMessageFor(model => model.Opportunity.OpportunityAdditionalInformation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityDate)
        </div>
        <div class="editor-field">
         @{ 
            DateTime dt = DateTime.Now;
            if (Model != null) 
            { 
               dt  = (System.DateTime) Model.EventDate; 
    
            } 
            @Html.TextBox("Opportunity.OpportunityDate", String.Format("{0:d}", dt.ToShortDateString()), 
                new { @class = "datefield", type = "date", style="width:80px" }) 
        } 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityLocationName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opportunity.OpportunityLocationName)
            @Html.ValidationMessageFor(model => model.Opportunity.OpportunityLocationName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.OpportunityPostcode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opportunity.OpportunityPostcode, new { style = "width: 100px;" })
            @Html.ValidationMessageFor(model => model.Opportunity.OpportunityPostcode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.MinNumberofVolunteers)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opportunity.MinNumberofVolunteers, new { style = "width: 50px;" })
            @Html.ValidationMessageFor(model => model.Opportunity.MinNumberofVolunteers)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opportunity.MaxNumberofVolunteers)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opportunity.MaxNumberofVolunteers, new { style = "width: 50px;" })
            @Html.ValidationMessageFor(model => model.Opportunity.MaxNumberofVolunteers)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

  @section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datefield').datepicker({ dateFormat: "dd/mm/yy" });
        });
    </script>
    }